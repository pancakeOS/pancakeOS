name: Release PancakeOS

on:
  release:
    types: [created]

jobs:
  build:
    name: Build and publish release assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TOKEN: ${{ secrets.TOKEN }}
    steps:
      - name: Fail if TOKEN secret missing
        run: |
          if [ -z "$TOKEN" ]; then echo "Required secret TOKEN is not set. Aborting release."; exit 1; fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y zip wget unzip

      - name: Create .love file
        run: |
          cd $GITHUB_WORKSPACE
          zip -9 -r pancakeos.love . -x '*.git*' '*.github*' '*.vscode*'

      - name: Build Linux AppImage
        run: |
          chmod +x .github/scripts/build_appimage.sh || true
          ./.github/scripts/build_appimage.sh

      - name: Build Windows .exe and zip
        run: |
          wget https://github.com/love2d/love/releases/download/11.5/love-11.5-win64.zip
          unzip love-11.5-win64.zip -d love-win64
          if [ -f love-win64/love.exe ]; then
            cat love-win64/love.exe pancakeos.love > PancakeOS.exe
          else
            cat love-win64/*/love.exe pancakeos.love > PancakeOS.exe
          fi
          cp love-win64/**/*.dll . || cp love-win64/*.dll . || true
          zip -r PancakeOS-windows.zip PancakeOS.exe *.dll || true

      - name: Build macOS .app
        run: |
          wget https://github.com/love2d/love/releases/download/11.5/love-11.5-macos.zip
          unzip love-11.5-macos.zip -d love-macos
          cp pancakeos.love love-macos/love.app/Contents/Resources/ || true
          mv love-macos/love.app love-macos/PancakeOS.app || true
          cd love-macos || true
          zip -r ../PancakeOS-macOS.zip PancakeOS.app || true
          cd .. || true

      - name: Number release as #N
        id: number_release
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const releases = await github.rest.repos.listReleases({ owner, repo, per_page: 100 });
            const count = releases.data.filter(r => !r.draft).length;
            const releaseNumber = count;
            const name = `#${releaseNumber}`;
            await github.rest.repos.updateRelease({ owner, repo, release_id: context.payload.release.id, name });
            return { name };
        env:
          GITHUB_TOKEN: ${{ env.TOKEN }}

      - name: Upload asset (windows)
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./PancakeOS-windows.zip
          asset_name: PancakeOS-windows.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ env.TOKEN }}

      - name: Upload asset (macOS)
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./PancakeOS-macOS.zip
          asset_name: PancakeOS-macOS.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ env.TOKEN }}

      - name: Upload asset (.love)
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./pancakeos.love
          asset_name: pancakeos.love
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ env.TOKEN }}

      - name: Ensure AppImage is present
        run: |
          if [ ! -f PancakeOS-x86_64.AppImage ]; then echo "AppImage not found"; ls -la || true; exit 1; fi

      - name: Make AppImage executable
        run: |
          chmod +x PancakeOS-x86_64.AppImage || true

      - name: Upload asset (AppImage)
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./PancakeOS-x86_64.AppImage
          asset_name: PancakeOS-x86_64.AppImage
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ env.TOKEN }}
